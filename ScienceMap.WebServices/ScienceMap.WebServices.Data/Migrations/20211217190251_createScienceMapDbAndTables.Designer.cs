// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScienceMap.WebServices.Data;

namespace ScienceMap.WebServices.Data.Migrations
{
    [DbContext(typeof(ScienceMapDbContext))]
    [Migration("20211217190251_createScienceMapDbAndTables")]
    partial class createScienceMapDbAndTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.AuthorName", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("LAST_NAME");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("MIDDLE_NAME");

                    b.HasKey("Id");

                    b.HasAlternateKey("FirstName")
                        .HasName("AlternateKey_FirstName");

                    b.ToTable("SM_AUTHOR_NAME");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.ClassificationSubject", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IMAGE_URL");

                    b.Property<string>("Keywords")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("KEYWORDS");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.Property<Guid?>("StateId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("STATE_ID");

                    b.HasKey("Id");

                    b.ToTable("SM_SCS");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.ClassificationSubjectDiscussion", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<Guid?>("DiscussionId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DISCUSSION_ID");

                    b.Property<DateTime?>("InitiatedDate")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("INITIATED_DATE");

                    b.Property<Guid?>("InitiatedUserId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("INITIATED_USER_ID");

                    b.Property<string>("Keywords")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("KEYWORDS");

                    b.Property<Guid?>("ScsId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SCS_ID");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TITLE");

                    b.HasKey("Id");

                    b.ToTable("SM_SCS_DISCUSSION");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.ClassificationSubjectPublication", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid?>("OriginatorUserId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ORIGINATOR_USER_ID");

                    b.Property<Guid?>("PublicationId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PUBLICATION_ID");

                    b.Property<Guid?>("ScsId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SCS_ID");

                    b.Property<Guid?>("ScsPublicationStateId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SCS_PUBLICATION_STATE_ID");

                    b.HasKey("Id");

                    b.ToTable("SM_SCS_PUBLICATION");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.ClassificationSubjectPublicationState", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("SM_SCS_PUBLICATION_STATE");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.ClassificationSubjectRelation", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid?>("ParentScsId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PARENT_SCS_ID");

                    b.Property<Guid?>("ScsId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SCS_ID");

                    b.HasKey("Id");

                    b.ToTable("SM_SCS_RELATION");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.ClassificationSubjectState", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("SM_SCS_STATE");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.ClassificationSubjectSuggestion", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<bool>("AppliedUserOrchestratorRole")
                        .HasColumnType("bit")
                        .HasColumnName("APPLIED_USER_ORCHESTRATOR_ROLE");

                    b.Property<Guid?>("ScsId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SCS_ID");

                    b.Property<string>("SuggestedOrchestratorMail")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("SUGGESTED_ORCHESTRATOR_MAIL");

                    b.Property<string>("SuggestedOrchestratorName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("SUGGESTED_ORCHESTRATOR_NAME");

                    b.Property<string>("SuggestedOrchestratorPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SUGGESTED_ORCHESTRATOR_PHONE");

                    b.Property<Guid?>("SuggestedUserId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SUGGESTED_USER_ID");

                    b.HasKey("Id");

                    b.ToTable("SM_SCS_SUGGESTION");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.ClassificationSubjectUser", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid?>("ScsId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SCS_ID");

                    b.Property<Guid?>("ScsUserRoleId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SCS_USER_ROLE_ID");

                    b.Property<Guid?>("UserId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.ToTable("SM_SCS_USER");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.ClassificationSubjectUserRole", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("SM_SCS_USER_ROLE");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.Discussion", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid?>("DiscussionTypeId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DISCUSSION_TYPE_ID");

                    b.HasKey("Id");

                    b.ToTable("SM_DISCUSSION");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.DiscussionEntry", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.Property<Guid?>("CreatedUserId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATED_USER_ID");

                    b.Property<Guid?>("DiscussionId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DISCUSSION_ID");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PARENT_ID");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SM_DISCUSSION_ENTRY");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.DiscussionType", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("SM_DISCUSSION_TYPE");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.Organisation", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NAME");

                    b.Property<Guid?>("OrganisationStateId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ORGANISATION_STATE_ID");

                    b.Property<Guid?>("OrganisationTypeId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ORGANISATION_TYPE_ID");

                    b.Property<string>("ShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SHORT_NAME");

                    b.Property<string>("Url")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("URL");

                    b.HasKey("Id");

                    b.ToTable("SM_ORGANISATION");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.OrganisationState", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("SM_ORGANISATION_STATE");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.OrganisationType", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("SM_ORGANISATION_TYPE");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.PubInfluence", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid?>("CreatedUserId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATED_USER_ID");

                    b.Property<string>("NOTE")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("NOTE");

                    b.Property<Guid?>("PubIdSource")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PUB_ID_SOURCE");

                    b.Property<Guid?>("PubIdTarget")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PUB_ID_TARGET");

                    b.Property<Guid?>("PubInfluenceTypeId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PUB_INFLUENCE_TYPE_ID");

                    b.HasKey("Id");

                    b.ToTable("SM_PUB_INFLUENCE");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.PubInfluenceRate", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.Property<Guid?>("DiscussionId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DISCUSSION_ID");

                    b.Property<Guid?>("OriginatorUserId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ORIGINATOR_USER_ID");

                    b.Property<Guid?>("PubInfluenceId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PUB_INFLUENCE_ID");

                    b.Property<Guid?>("PubInfluenceRateTypeId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PUB_INFLUENCE_RATE_TYPE_ID");

                    b.HasKey("Id");

                    b.ToTable("SM_PUB_INFLUENCE_RATE");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.PubInfluenceRateType", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("SM_PUB_INFLUENCE_RATE_TYPE");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.PubInfluenceType", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.Property<Guid?>("PubInfluenceTypeAssementId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PUB_INFLUENCE_TYPE_ASSEMENT_ID");

                    b.Property<Guid?>("PubInfluenceTypeStateId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PUB_INFLUENCE_TYPE_STATE_ID");

                    b.HasKey("Id");

                    b.ToTable("SM_PUB_INFLUENCE_TYPE");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.PubInfluenceTypeAssessment", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("SM_PUB_INFLUENCE_TYPE_ASSESSMENT");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.PubInfluenceTypeState", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("SM_PUB_INFLUENCE_TYPE_STATE");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.PubInfluenceTypeSuggestion", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid?>("PubInfluenceTypeId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PUB_INFLUENCE_TYPE_ID");

                    b.Property<Guid?>("SuggestedUserId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SUGGESTED_USER_ID");

                    b.HasKey("Id");

                    b.ToTable("SM_PUB_INFLUENCE_TYPE_SUGGESTION");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.Publication", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Abstract")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ABSTRACT");

                    b.Property<string>("AdditionalDetails")
                        .HasMaxLength(360)
                        .HasColumnType("nvarchar(360)")
                        .HasColumnName("ADDITIONAL_DETAILS");

                    b.Property<Guid?>("PublicationStateId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PUBLICATION_STATE_ID");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("TITLE");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("YEAR");

                    b.HasKey("Id");

                    b.ToTable("SM_PUBLICATION");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.PublicationAuthor", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid?>("AuthorNameId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AUTHOR_NAME_ID");

                    b.Property<int>("OrderKey")
                        .HasColumnType("int")
                        .HasColumnName("ORDER_KEY");

                    b.Property<Guid?>("PublicationId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PUBLICATION_ID");

                    b.HasKey("Id");

                    b.ToTable("SM_PUBLICATION_AUTHOR");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.PublicationState", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("SM_PUBLICATION_STATE");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.User", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("EncryptedPasswordHash")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ENCRYPTED_PASSWORD_HASH");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("LAST_NAME");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("USER_NAME");

                    b.Property<Guid?>("UserStateId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("USER_STATE_ID");

                    b.HasKey("Id");

                    b.ToTable("SM_USER");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.UserAuthor", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid?>("PublicationAuthorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PUBLICATION_AUTHOR_ID");

                    b.Property<Guid?>("UserId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.ToTable("SM_USER_AUTHOR");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.UserFavAuthor", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid?>("FavUserAuthorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FAV_USER_AUTHOR_ID");

                    b.Property<Guid?>("UserId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.ToTable("SM_USER_FAV_AUTHOR");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.UserFavClassificationSubject", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid?>("ScsId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SCS_ID");

                    b.Property<Guid?>("UserId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.ToTable("SM_USER_FAV_SCS");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.UserFollowerDiscussion", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid?>("DiscussionId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DISCUSSION_ID");

                    b.Property<Guid?>("UserId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.ToTable("SM_USER_FOLLOWER_DISCUSSION");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.UserOrganisation", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<int>("OrderKey")
                        .HasColumnType("int")
                        .HasColumnName("ORDER_KEY");

                    b.Property<Guid?>("OrganisationId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ORGANISATION_ID");

                    b.Property<Guid?>("UserId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.ToTable("SM_USER_ORGANISATION");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.UserRole", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid?>("UserId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("USER_ID");

                    b.Property<Guid?>("UserRoleTypeId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("USER_ROLE_TYPE_ID");

                    b.HasKey("Id");

                    b.ToTable("SM_USER_ROLE");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.UserRoleType", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid?>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DESCRIPTION");

                    b.Property<Guid?>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("SM_USER_ROLE_TYPE");
                });

            modelBuilder.Entity("ScienceMap.WebServices.Data.Models.UserState", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("SM_USER_STATE");
                });
#pragma warning restore 612, 618
        }
    }
}
